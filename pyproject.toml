[tool.poetry]
name = "click_loguru"
version = "1.3.4"
description = "Logging to stderr and file for click applications."
authors = ["Joel Berendzen <joelb@ncgr.org>"]
license = "BSD-3-Clause"
readme = "README.rst"
homepage = "https://github.com/legumeinfo/click_loguru"
documentation = "https://github.com/legumeinfo/click_loguru"
keywords = [
    "logging",
    "click",
    "console"
    ]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: BSD License',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Topic :: Software Development :: User Interfaces'
    ]

[tool.poetry.dependencies]
python = "^3.6.1"
click = "^7.1.2"
loguru = "^0.5.0"
memory_profiler = "^0.57.0"
attrs = "^20.1.0"

[tool.poetry.dev-dependencies]
pytest = "^6.1"
pytest-cov = "^2.8.1"
black = {version = "^20.8b1", allow-prereleases = true}
pre-commit = "^2.3.0"
pydocstyle = "^5.0.2"
isort = {extras = ["pyproject"], version = "^5.4.2"}
pylint = "^2.5.2"
coverage = {extras = ["toml"], version = "^5.1"}
nox = "^2020.5.24"
poetry-dynamic-versioning = "^0.8.1"

[tool.black]
line-length = 79
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
  \.git
  | \.mypy_cache
  | \.nox
  | \.idea
  | \.pytest-cache
  | _build
  | build
  | dist
  | tests/
)/
'''

[tool.isort]
atomic = true
force_single_line = true
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 79
import_heading_stdlib = "standard library imports"
import_heading_thirdparty = "third-party imports"
import_heading_firstparty = "first-party imports"
import_heading_localfolder = "module imports"
known_standard_library = "pkg_resources"

[tool.poetry-dynamic-versioning]
style = "semver"

[tool.coverage.run]
parallel = true
omit = ["tests/*", "noxfile.py", ".nox/*"]

[tool.coverage.report]
exclude_lines = [
    "if self.debug:",
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
    ]

[tool.pylint.'MESSAGES CONTROL']
disable = """,
   print-statement,
   parameter-unpacking,
   unpacking-in-except,
   old-raise-syntax,
   backtick,
   long-suffix,
   old-ne-operator,
   old-octal-literal,
   import-star-module-level,
   non-ascii-bytes-literal,
   raw-checker-failed,
   bad-inline-option,
   locally-disabled,
   file-ignored,
   suppressed-message,
   useless-suppression,
   deprecated-pragma,
   use-symbolic-message-instead,
   apply-builtin,
   basestring-builtin,
   buffer-builtin,
   cmp-builtin,
   coerce-builtin,
   execfile-builtin,
   file-builtin,
   long-builtin,
   raw_input-builtin,
   reduce-builtin,
   standarderror-builtin,
   unicode-builtin,
   xrange-builtin,
   coerce-method,
   delslice-method,
   getslice-method,
   setslice-method,
   no-absolute-import,
   old-division,
   dict-iter-method,
   dict-view-method,
   next-method-called,
   metaclass-assignment,
   indexing-exception,
   raising-string,
   reload-builtin,
   oct-method,
   hex-method,
   nonzero-method,
   cmp-method,
   input-builtin,
   round-builtin,
   intern-builtin,
   unichr-builtin,
   map-builtin-not-iterating,
   zip-builtin-not-iterating,
   range-builtin-not-iterating,
   filter-builtin-not-iterating,
   using-cmp-argument,
   eq-without-hash,
   div-method,
   idiv-method,
   rdiv-method,
   exception-message-attribute,
   invalid-str-codec,
   sys-max-int,
   bad-python3-import,
   deprecated-string-function,
   deprecated-str-translate-call,
   deprecated-itertools-function,
   deprecated-types-field,
   next-method-defined,
   dict-items-not-iterating,
   dict-keys-not-iterating,
   dict-values-not-iterating,
   deprecated-operator-function,
   deprecated-urllib-function,
   xreadlines-attribute,
   deprecated-sys-function,
   exception-escape,
   comprehension-escape,
   no-self-use,
   wrong-import-position,
   bad-continuation,
   too-many-locals,
   too-many-statements,
   too-few-public-methods,
   too-many-arguments,
   too-many-branches,
   too-many-instance-attributes,
   """

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
